"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[821],{5042:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var t=i(4848),s=i(8453);const l={sidebar_position:1,title:"Preparing for Local Development"},o=void 0,r={id:"development/setup",title:"Preparing for Local Development",description:"This section discusses the one-time setup in order to develop Kugelblitz.",source:"@site/docs/development/setup.md",sourceDirName:"development",slug:"/development/setup",permalink:"/docs/development/setup",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/Kugelblitz/tree/master/docs/docs/development/setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Preparing for Local Development"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Profiles",permalink:"/docs/development/profile"}},a={},c=[{value:"Installing Java &amp; Maven (on Mac)",id:"installing-java--maven-on-mac",level:2},{value:"Installing Docker Engine",id:"installing-docker-engine",level:2},{value:"Installing Code Style Checker",id:"installing-code-style-checker",level:2},{value:"Getting Source Code",id:"getting-source-code",level:2},{value:"Syncing up with Kugelblitz&#39;s Code Styles with IntelliJ",id:"syncing-up-with-kugelblitzs-code-styles-with-intellij",level:3},{value:"Troubleshooting",id:"troubleshooting",level:4},{value:"IntelliJ Cannot READ Resource File",id:"intellij-cannot-read-resource-file",level:5},{value:"Tab Width",id:"tab-width",level:5}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This section discusses the one-time setup in order to develop Kugelblitz."}),"\n",(0,t.jsx)(n.h2,{id:"installing-java--maven-on-mac",children:"Installing Java & Maven (on Mac)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"brew update\nbrew install openjdk@17\n"})}),"\n",(0,t.jsx)(n.p,{children:"At the end of the last command prompt, something like the below will show up:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'For the system Java wrappers to find this JDK, symlink it with\n  sudo ln -sfn ...openjdk@17/libexec/openjdk.jdk .../JavaVirtualMachines/openjdk-17.jdk\n\nopenjdk@17 is keg-only, which means it was not symlinked into /usr/local,\nbecause this is an alternate version of another formula.\n\nIf you need to have openjdk@17 first in your PATH, run:\n  echo \'export PATH=".../openjdk@17/bin:$PATH"\' >> .../.bash_profile\n\nFor compilers to find openjdk@17 you may need to set:\n  export CPPFLAGS="-I.../openjdk@17/include"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Make sure to execute the ",(0,t.jsx)(n.code,{children:"sudo ln -sfn"}),", ",(0,t.jsx)(n.code,{children:"echo 'export PATH=..."}),", and the ",(0,t.jsx)(n.code,{children:"export CPPFLAGS="})," commands above"]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["Kugelblitz is built using maven, which uses a separate JDK version. This can be seen via ",(0,t.jsx)(n.code,{children:"mvn -v"}),". If it's not JDK 17, we\nshould have Maven point to our JDK 17 using ",(0,t.jsx)(n.a,{href:"https://stackoverflow.com/a/2503679",children:"JAVA_HOME"}),":"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ /usr/libexec/java_home\n/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home\n\n$ export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"If we see something similar after typing the command with the version flag below we're good to go"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ java --version\nopenjdk 17.0.10 2021-01-19\nOpenJDK Runtime Environment (build 17.0.10+9)\nOpenJDK 64-Bit Server VM (build 17.0.10+9, mixed mode)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"installing-docker-engine",children:"Installing Docker Engine"}),"\n",(0,t.jsxs)(n.p,{children:["Kugelblitz has\n",(0,t.jsx)(n.a,{href:"https://github.com/QubitPi/Kugelblitz/blob/master/src/test/java/org/qubitpi/kugelblitz/arango/ArangoControllerIT.java",children:"Docker-based integration tests"}),";\nit also supports\n",(0,t.jsx)(n.a,{href:"https://github.com/QubitPi/Kugelblitz/blob/master/src/test/java/org/qubitpi/kugelblitz/DockerComposeIT.java",children:"running template webserivce in Docker"}),".\nDocker can be installed by following ",(0,t.jsx)(n.a,{href:"https://docker.qubitpi.org/desktop/setup/install/mac-install/",children:"this instruction"})]}),"\n",(0,t.jsx)(n.h2,{id:"installing-code-style-checker",children:"Installing Code Style Checker"}),"\n",(0,t.jsxs)(n.p,{children:["Kugelblitz utilizes ",(0,t.jsx)(n.a,{href:"https://pre-commit.com/",children:"pre-commit"})," which sometimes doesn't give very informative\nmessages when its check fails in Kugelblitz's CI/CD. One approach to make sure pre-commit passes is to run it locally\nby installing it first:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"pip3 install pre-commit\n"})}),"\n",(0,t.jsx)(n.p,{children:"then run pre-commit check which would fix everything in one go:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"pre-commit run -a\n"})}),"\n",(0,t.jsx)(n.h2,{id:"getting-source-code",children:"Getting Source Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:QubitPi/Kugelblitz.git\ncd Kugelblitz\n"})}),"\n",(0,t.jsx)(n.h3,{id:"syncing-up-with-kugelblitzs-code-styles-with-intellij",children:"Syncing up with Kugelblitz's Code Styles with IntelliJ"}),"\n",(0,t.jsxs)(n.p,{children:["For the moment, we have distilled the most important code style conventions with respect to Kugelblitz's code as IntelliJ\nsettings. If IntelliJ is used for IDE, we may import these code style settings by importing the\n",(0,t.jsx)(n.a,{href:"https://github.com/QubitPi/Kugelblitz/blob/master/Kugelblitz-Project-intellij-code-style.xml",children:"Kugelblitz-Project-intellij-code-style.xml"}),'\nfile in the root of the repo. The setting for the project will appear as a new Scheme named "Kugelblitz-Project" under\nIDE\'s ',(0,t.jsx)(n.strong,{children:"Editor"})," -> ",(0,t.jsx)(n.strong,{children:"Code Style"})," section."]}),"\n",(0,t.jsxs)(n.p,{children:['Please also enable "remove unused imports" by ',(0,t.jsx)(n.strong,{children:"Editor"})," -> ",(0,t.jsx)(n.strong,{children:"General"})," -> ",(0,t.jsx)(n.strong,{children:"Auto Import"})," -> ",(0,t.jsx)(n.strong,{children:"Optimize Imports on the\nFly"}),", which will automatically remove unused imports."]}),"\n",(0,t.jsx)(n.h4,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h5,{id:"intellij-cannot-read-resource-file",children:"IntelliJ Cannot READ Resource File"}),"\n",(0,t.jsx)(n.p,{children:'We sometimes see errors when we run unit tests in IntelliJ, saying "some resource file" cannot be found. We know the\npath is absolutely right. If this is the case, it\'s simply a IntelliJ issue which is solved by simply loading those\nresources explicitly by telling IntelliJ where those resources are:'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Error loading intelliJ-find-resource.png",src:i(7572).A+"",width:"2542",height:"1600"})}),"\n",(0,t.jsx)(n.h5,{id:"tab-width",children:"Tab Width"}),"\n",(0,t.jsxs)(n.p,{children:["We use 4-space as tab. This can be configured at ",(0,t.jsx)(n.strong,{children:"Code Style"})," -> ",(0,t.jsx)(n.strong,{children:"Java"})," -> ",(0,t.jsx)(n.strong,{children:"Tabs and Indents"})," with the following\nsettings:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tab size: 4"}),"\n",(0,t.jsx)(n.li,{children:"Indent: 4"}),"\n",(0,t.jsx)(n.li,{children:"Continuation indent: 8"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If tabs still come out at 2 spaces when hitting TAB or Enter, not 4 spaces, try:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:'"Settings | Editor | Code Style" -- try disabling "Detect and use existing file indents for editing" in case if you\nhave it enabled (it is by default). NOTE: re-opening file in editor may be required.'}),"\n",(0,t.jsx)(n.li,{children:'Do you have any .editorconfig files anywhere in the path of that file? Settings from .editorconfig\n("Settings | Editor | Code Style") have priority (will overwrite) over your IDE settings.'}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7572:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/intelliJ-find-resource-3f94d06504aac240f01fcde613894835.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);